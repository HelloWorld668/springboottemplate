system=system

spring.datasource.url=jdbc:mysql://localhost:3306/test1
spring.datasource.username=root
spring.datasource.password=1
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#create 每次加载都删除上一次生成的表,然后根据model类重新生成表,会导致数据丢失
#create-drop 每次加载都根据model类生成表,但是sessionFactory一关闭,表就自动删除
#update 第一次加载根据model生成表 之后更新根据model改变表结构  数据不丢失 部署到服务器后,表结构不会马山建立起来,要等到程序第一次运行 
#validate 验证,但是不改表结构,会插入新值
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#dialect 生成表名的存储引擎为InneoDB
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#是否打印出sql
spring.jpa.show-sql= true

#配置mybatis-config.xml路径  mybatis-config.xml配置MyBatis基础属性
mybatis.config-location=classpath:mybatis/mybatis-config.xml
#Mapper对应的XML文件路径
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
#项目中实体类包路径
mybatis.type-aliases-package=com.xc.springboottemplate.domain.entity
#数据源信息
#spring.secondary.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.secondary.datasource.url = jdbc:mysql://localhost:3306/test1?useUnicode=true&characterEncoding=utf-8
#spring.secondary.datasource.username = root
#spring.secondary.datasource.password = 1111


# REDIS
# Redis 数据库索引(默认为0)
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=47.94.195.67
# Redis端口
spring.redis.port=6379  
# Redis password
spring.redis.password=  test123
# 连接池最大连接数(使用负值表示没有限制)
spring.redis.pool.max-active=8  
# 连接池最大阻塞等待时间(使用负值表示没有限制)
spring.redis.pool.max-wait=-1  
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8  
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0  
# 连接超时时间(毫秒)
spring.redis.timeout=10000 